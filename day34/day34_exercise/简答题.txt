## 1.1 简答题一
请简述什么是三层架构并聊聊三层架构设计的好处?
答:
三层架构是一个分层式的软件体系架构设计,主要分为表现层、业务逻辑层、数据访问层三层架构，各层之间采用接口互相访问，
并通过对象模型的实体类作为数据传递的载体，不同对象模型的实体类一般对应于数据库的不同表，实体类的属性与数据库表的字段名一致。
三层架构分层次的目的是为了高内聚、低耦合，开发人员分工更明确，将精力更专注于应用系统核心业务逻辑的分析、设计和开发，
加快项目的进度，提高开发效率，有利于项目的更新和维护工作。

## 1.2 简答题二
请简述什么是MVC?
答：
MVC的全名是Model View Controller,分别是模型(model)-视图(view)-控制器(controller)的缩写，MVC是表现层的一种设计模式。
使用MVC的目的是将M和V实现代码分离，从而实现一个程序可以使用不同的表现形式，比如京东有PC端与APP端的多种展示形式。
V:即视图指用户看到并与之交互的界面，主要的作用是发送请求和数据并展示结果
C:即控制器，主要用来接收前端的请求和数据，并将请求数据交给对应的模型来处理，然后再确定用哪个视图来显示返回的结果
M:即模型指业务规则，主要用来处理前端的请求和数据并返回处理结果。

## 1.3 简答题三
简单说说你对SpringMVC的理解?
答:
SpringMVC是一款非常优秀的基于Java编写的实现了MVC设计模式的轻量级WEB层框架，其主要的作用包括接收前端的请求、
接收前端数据、转发业务层和响应结果，并且SpringMVC与Spring整合兼容性好，功能强大，支持RESTful风格。

## 1.4 简答题四
简述你对REST与RESTful的理解?
答:
REST即表现形式状态转换，它是一种软件架构风格，不是标准。简单概括就是通过使用同一个请求地址和不同的请求动作来区分对资源进行不同的操作，
如GET用来做查询，POST用来做新增，PUT用来做修改，DELETE用来做删除。
RESTful是基于REST构建的API统称为RESTful。

## 1.5 简答题五
简述SpringMVC如何接收前端的数据?
答:
SpringMVC为我们提供了很多种获取参数的方式，其中包含普通参数、POJO类型参数、嵌套POJO类型参数、数组类型参数、集合类型参数以及JSON数据类型参数。
1.普通参数有两种数据传递方式
	方式一:url?key=value,确保方法的形参与key一致即可接收，如果不一致需要使用@RequestParam来建立关系
	方式二:url/value,RESTFul参数传递方式即为路径参数，需要使用@PathVariable来接收
2.普通参数如果过多，在方法中编写参数就比较麻烦，此时可以使用POJO数据类型来接收，需要确保POJO的属性名和参数的key一致即可
3.POJO对象也可以嵌套其他的POJO，可以用来接收比较复杂的数据，比如用户中包含地址信息
4.数组类型参数可以用来接收key相同的多个参数，比如用户的爱好信息等
5.集合类型参数，使用数组来接收的数据也可以使用集合来接收，但是需要在参数前添加@RequestParam注解
6.对于JSON数据类型参数，后台接收需要使用@RequestBody

## 1.6 简答题六
简述SpringMVC常用的注解及对应的作用是什么?
答:
@Controller:控制器注解，用来标识该类为SpringMVC的Controller对象，该注解不能使用@Component替换
@RequestMapping:用来设置controller类中方法的请求访问路径，可以写在类上和方法上
@GetMapping:作用等同于@RequestMapping,只能处理请求方式为GET的请求
@PostMapping:作用等同于@RequestMapping,只能处理请求方式为POST的请求
@DeleteMapping:作用等同于@RequestMapping,只能处理请求方式为DELETE的请求
@PutMapping:作用等同于@RequestMapping,只能处理请求方式为PUT的请求
@RequestBody:用来实现接收http请求的json数据，将json数据转换为java对象
@ResponseBody:如果controller类中方法的返回值为对象，SpringMVC会将其转换为json响应给前端，如果方法返回值是字符串，则会原样返回到前端
@RequestParam:用来绑定请求参数与Controller方法形参之间的关系
@PathVariable:用来接收RESTFUL的路径参数
@RestController:作用等同于@Controller+@ResponseBody