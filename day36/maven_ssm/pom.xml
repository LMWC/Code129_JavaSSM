<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">  
  <modelVersion>4.0.0</modelVersion>  
  <groupId>com.itheima</groupId>  
  <artifactId>maven_ssm</artifactId>  
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <!--继承-->
  <parent>
    <groupId>com.itheima</groupId>
    <artifactId>maven01_parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!--填写父工程pom文件所在位置-->
    <relativePath>../maven01_parent/pom.xml</relativePath>
  </parent>

  <!--设置Maven项目JDK编译版本为1.8-->
  <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <maven.compiler.source>1.8</maven.compiler.source>
      <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <!--
        scope：依赖范围
          compile：默认 表示这个jar包在编译 测试 运行时都需要用到
          test：表示这个jar包只在测试时需要用到 编译和运行时 不需要用到 也不会被打到就javaweb项目的war包中    eg：junit
          provided：表示这个jar包只在编译和测试时用到 运行时不需要用到  也不会被打到就javaweb项目的war包中   eg：servlet、lombok
          一个依赖坐标：可以引入多个jar包
      -->
  <!--依赖管理-->
  <dependencies>
    <!--测试  从私服下载jar包-->
    <!--<dependency>
      <groupId>com.itheima</groupId>
      <artifactId>heima-utils</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>-->

    <!--引入maven02_pojo-->
    <dependency>
      <groupId>com.itheima</groupId>
      <artifactId>maven02_pojo</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <!--引入maven03_dao-->
    <dependency>
      <groupId>com.itheima</groupId>
      <artifactId>maven03_dao</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <!--引入maven04_service-->
    <dependency>
      <groupId>com.itheima</groupId>
      <artifactId>maven04_service</artifactId>
      <version>1.0-SNAPSHOT</version>
      <!--主动排除 排除依赖 -->
      <exclusions>
        <exclusion>
          <groupId>com.itheima</groupId>
          <artifactId>maven02_pojo</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.itheima</groupId>
          <artifactId>maven03_dao</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!--<dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>-->


    <!--【springmvc、spring、mybatis、spring整合mybatis相关】-->
    <!--1.SpringMVC+Spring-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <!--jackson-databind-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.9.6</version>
    </dependency>

    <!--2.Spring AOP相关依赖-->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.9.4</version>
    </dependency>

    <!--3.mybatis相关依赖-->
    <!--3.1：mybatis依赖-->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.4.6</version>
    </dependency>
    <!--3.2：mysql驱动jar包依赖-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.47</version>
    </dependency>
    <!--3.3：druid连接池依赖-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.1.23</version>
    </dependency>
    <!--3.4：Spring和Mybatis整合jar包依赖-->
    <!--MyBatis为了能和Spring一起使用  mybatis提供了一个整合jar包 mybatis-spring -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>2.0.2</version>
    </dependency>
    <!--Spring为了整合MyBatis 方便操作数据库 -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>5.1.2.RELEASE</version>
    </dependency>
    <!--3.5：日志依赖-->
    <!-- log start -->
    <!-- 日志的具体实现  -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
    <!--  接口  -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.25</version>
    </dependency>
    <!-- log end -->
  </dependencies>

  <!--配置tomcat插件-->
  <build>
      <plugins>
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>2.2</version>
          <!--访问项目url：http://localhost:80-->
          <configuration>
              <!--设置字符编码 解决get方式提交参数乱码-->
              <uriEncoding>utf-8</uriEncoding>
              <!--项目访问的虚拟路径-->
              <path>/</path>
              <!--tomcat端口号-->
              <port>80</port>
          </configuration>
        </plugin>
      </plugins>
  </build>
</project>
