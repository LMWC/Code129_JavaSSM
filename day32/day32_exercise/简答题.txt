## 1.1 简答题一
请简述BeanFactory和ApplicationContext有什么区别?
答:
1.BeanFactory和ApplicationContext是Spring的两大核心接口，都可以当作Spring的容器。
  其中ApplicationContext是BeanFactory的子接口。
2.BeanFactory采用的是延迟加载形式来注入Bean,即只有在使用到某个Bean时才会去创建该Bean对象，
  ApplicationContext是在容器启动时，一次性创建了所有的Bean。


## 1.2 简答题二
请简述Spring中容器创建与Bean对象获取的几种常见方式有哪些?
答：
创建容器的方式:
1.使用ClassPathXmlApplicationContext,此种方式是从类路径下查找配置文件
2.使用FileSystemXmlApplicationContext，此种方式是从系统的文件系统下查找配置文件
获取Bean的方式:
1.getBean("beanId"),该方式是根据传入的beanId来获取bean对象，需要进行类型强制转换
2.getBean("beanId",类.class),该方式可以不用进行类型转换，但是需要传递两个参数
3.getBean(类.class),该方式是根据类型来获取bean对象，但是需要保证容器中该类的对象只能有一个


## 1.3 简答题三
请简述Spring中IOC与DI的常见注解有哪些?
答:
1.@ComponentScan：设置spring配置类扫描路径，用于加载使用注解格式定义的bean
2.@Component: 设置该类为spring管理的bean
3.由@Component衍生出其他三个注解，@Controller,@Service,@Repository
4.@Configuration:编写在类上，标识该类为一个配置类
5.@Bean:编写在方法上，会将方法的返回值制作成Spring容器中的一个bean对象
6.@Autowired:为引用类型属性设置值
7.@Qualifier:为引用类型属性指定注入的beanId
8.@Value:为基本数据类型或或字符串类型属性设置值
9.@PropertySource：加载properties文件中的属性值
10.@Import:在当前类中引入其他的配置类
11.@Scope:该注解用来指定bean的作用范围
12.@PostConstructor:写在方法上，设置该方法为初始化方法
13.@PreDestroy:写在方法上，设置该方法为销毁方法


## 1.4简答题四
请简述Spring整合Junit的实现步骤是什么?
答:
1.引入对应的依赖
2.创建测试类
3.类上添加注解
	@RunWith(SpringJUnit4ClassRunner.class),用来设置Junit运行器
	@ContextConfiguration,用来加载Spring的核心配置
		class：加载核心配置类
		locations:加载核心配置文件
4.在测试类中注入需要测试的对象，然后调用方法进行测试


## 1.5 简答题五
请简述Spring整合Mybatis的实现步骤是什么?
答:
Spring整合Mybatis，就是将Mybatis的相关资源交给Spring来管理。
Mybatis主要是对数据库表的增删改查，所以
1.需要先有一个数据库及表
2.需要操作表，就需要连接数据库，连接数据库就需要配置数据源，此处采用的是DruidDataSource
3.连接池需要配置数据库连接四要素，分布是 驱动、url地址、用户名、密码，将这些信息配置到Jdbc.properties，
  并且Spring加载环境的时候需要使用@PropertySource加载该配置文件
4.Mybatis操作数据库的核心对象为SqlSession,Mybatis整合Spring的包中有提供SqlSessionFactoryBean用来创建SqlSession,
  需要进行配置，Spring容器中要创建所有的Mapper接口对象，则需要配置MapperScannerConfigurer用来扫描Mapper接口所在的包，
  所以将这两个对象配置到MybatisConfig配置类中
5.需要将Spring的配置和Mybatis的配置都需要引入到Spring的环境，所以需要添加SpringConfig配置类
6.针对具体的业务开始编写对应的Service接口、Service实现类以及Mapper接口
7.编写测试类进行测试


## 1.6 简答题六
请简述BeanFactory和FactoryBean的区别是什么?
答:
1.BeanFactory是一个工厂接口，重点落在Factory上,是Spring中所有工厂类的父接口，用于创建和管理容器中的bean对象
2.FactoryBean是一个Bean接口，重点落在Bean上，就是一个bean，主要用来构建比较复杂的bean对象，
  FactoryBean接口中有三个方法分别是getObject(返回bean对象放入容器)、getObjectType(返回bean对象的具体类型)、
  isSingleton(返回bean是否为单例)